{
	// Place your rocky workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"new command": {
		"scope": "typescript",
		"prefix": "command",
		"body": [
			"import { ChatInputCommandInteraction, PermissionFlagsBits } from \"discord.js\";",
			"import Command from \"../../base/classes/Command\";",
			"import CustomClient from \"../../base/classes/CustomClient\";",
			"import Category from \"../../base/enums/Category\";\n",

			"export default class $TM_FILENAME_BASE extends Command {",
    		"\tconstructor(client: CustomClient) {",
        		"\t\tsuper(client, {",
            	"\t\t\tname: \"$1\",",
            	"\t\t\tdescription: \"$2\",",
            	"\t\t\tcategory: Category.$3,",
            	"\t\t\tdefault_member_permissions: PermissionFlagsBits.$4,",
            	"\t\t\toptions: [$5],",
            	"\t\t\tcooldown: ${6:3},",
            	"\t\t\tdm_premissions: ${7:false},",
            	"\t\t\tdev: ${8:false}",
        		"\t\t});",
    		"\t}\n",

			"\tasync Execute(interaction: ChatInputCommandInteraction) {",
			"\t\t$9",
			"\t}",
		"}"
		]
	},
	"new subcommand": {
		"scope": "typescript",
		"prefix": "subcommand",
		"body": [
			"import { ChatInputCommandInteraction } from \"discord.js\";",
			"import CustomClient from \"../base/classes/CustomClient\";",
			"import SubCommand from \"../base/classes/SubCommand\";\n",

			"export default class $TM_FILENAME_BASE extends SubCommand {",	
    		"\tconstructor(client: CustomClient) {",
        	"\t\tsuper(client, {",
            "\t\t\tname: \"$1\",",
        	"\t\t})",
    		"\t}\n",

			"\tasync Execute(interaction: ChatInputCommandInteraction): void {",
				"\t\t$2",
			"/t}",
		"}"
		]
	}
}
